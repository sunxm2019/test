https://blog.csdn.net/u012732259/article/details/70172704
#----------root設定
sudo passwd root
root

#----------docker導入
sudo apt-get update

sudo apt-get install \
    apt-transport-https \
    ca-certificates \
    curl \
    software-properties-common

curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -

sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu \
   $(lsb_release -cs) stable"

sudo apt-get update
sudo apt-get install -y docker-ce

docker version
#-----------------------------------docker-compose導入
curl -L https://github.com/docker/compose/releases/download/1.24.1/docker-compose-`uname -s`-`uname -m` -o /usr/local/bin/docker-compose
chmod +x /usr/local/bin/docker-compose
docker-compose version

#---------------------IP設定
vi /etc/netplan/50-cloud-init.yaml
network:
    ethernets:
        ens33:
                addresses: [192.168.80.140/24]
                gateway4: 192.168.80.2
                nameservers:
                        addresses: [192.168.80.2]
    version: 2

netplan apply
#再接続
ping www.google.com

#--------------PC名前の変更
vi /etc/cloud/cloud.cfg
preserve_hostname: true

hostnamectl
hostnamectl set-hostname ubuntu_140

cat >> /etc/hosts <<EOF
192.168.80.140 ubuntu_140
EOF

cat /etc/hosts

#---------DNS変更
vi /etc/systemd/resolved.conf
DNS=192.168.11.1 #114.114.114.114

#--------------
cd /usr/local/
mkdir docker
cd docker

mkdir tomcat
cd tomcat
vi docker-compose.yml
:set paste

version: '3.1'
services:
    tomcat:
        restart: always
        image:tomcat
        container_name: tomcat
        ports:
            - 8080:8080
        volumes:
            - ./webapps: /usr/local/tomcat/webapps
        TZ: 'Asia/Tokyo'
       

docker-compose up -d
docker-compose down

#----------------
docker exec -it tomcat /bin/bash

#----------------MySQL
touch docker-compose.yml
version: '3.1'
services:
    mysql8:
        image: mysql
        restart: always
        environment:
            MYSQL_ROOT_PASSWORD: 123456
        command:
            --default-authentication-plugin=mysql_native_password
            --character-set-server=utf8mb4
            --collation-server=utf8mb4_general_ci
            --explicit_defaults_for_timestamp=true
            --lower_case_table_names=1
        container_name: mysql
        ports:
            - 3306:3306
        volumes:
            - ./data:/var/lib/mysql

    adminer:
        image: adminer
        container_name: mysql_adminer
        restart: always
        ports:
            - 8081:8080

#------------GitLab
version: '3'
services:
    gitlab:
      image: 'twang2218/gitlab-ce-zh:11.1.4'
      container_name: gitlab-ce-zh1114
      restart: unless-stopped
      hostname: '192.168.80.141'
      environment:
        TZ: 'Asia/Tokyou'
        GITLAB_OMNIBUS_CONFIG: |
          external_url 'http://192.168.80.141:8090'
          gitlab_rails['gitlab_shell_ssh_port'] = 2222
          unicorn['port'] = 8888
          nginx['listen_port'] = 8090
      ports:
        - '8090:8090'
        - '443:443'
        - '2222:22'
      volumes:
        - ./config:/etc/gitlab
        - ./data:/var/opt/gitlab
        - ./logs:/var/log/gitlab


#-------------------harbor
wget 'https://storage.googleapis.com/harbor-releases/release-1.9.0/harbor-offline-installer-v1.9.1.tgz'
tar zvxf harbor-offline-installer-v1.9.1.tgz
cd harbor
vi harbor.yml
hostname: 192.168.80.141
port:80
./install.sh

http://192.168.80.141
admin
Harbor12345

vi /etc/docker/daemon.json
{
    "insecure-registries": ["192.168.80.141"]
}
systemctl daemon-reload
systemctl restart docker
docker-compose up -d

docker tag mysql:latest 192.168.80.141/sunxm/mysql8:latest
docker login  -u admin -p Harbor12345 192.168.80.141
docker push 192.168.80.141/sunxm/mysql8:latest


docker pull 192.168.80.141/sunxm/mysql8:latest















